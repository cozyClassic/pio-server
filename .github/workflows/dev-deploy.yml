name: AWS dev server deploy

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    strategy:
      matrix:
        python-version: [3.13]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: pull base image
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: external-data
        run: |
          docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest

      - name: push base image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: external-data
        run: |
          docker build --cache-from=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest -f ./infra/Dockerfile.base -t external_data .
          docker tag external_data ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          docker tag external_data ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }} --all-tags

      - name: make env folder
        run: mkdir -p env

      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v2.0.0
        with:
          secrets: |
            dev/external-data
          parse-json: false

      - name: Create .env file
        run: |
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > env/.env
        env:
          SECRETS_CONTEXT: ${{ env.DEV_EXTERNAL_DATA }}

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: external-data
          environment_name: external-data-dev-api
          version_label: github-action-dev-${{ github.sha }}
          region: ap-northeast-2
          deployment_package: deploy.zip

      - name: Make tar file
        run: tar -cpvzf ./$GITHUB_SHA.tgz *
        shell: bash

      - name: Upload to S3
        run: |
          aws s3 cp \
            --region ap-northeast-2 \
            ./$GITHUB_SHA.tgz s3://external-data-deploy/$PROJECT_NAME/$GITHUB_SHA.tgz

      - name: Code Deploy
        run: aws deploy create-deployment --application-name external-data-cron --file-exists-behavior OVERWRITE --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name dev --s3-location bucket=external-data-deploy,bundleType=tgz,key=$PROJECT_NAME/$GITHUB_SHA.tgz
